name: Git and Docker test

on:
  push:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'adopt'

      - name: Build with Maven
        run: mvn clean install

      - name: Extract version from pom.xml
        run: |
          SPRING_BOOT_VERSION=$(mvn -q -Dexec.executable=echo -Dexec.args='${project.version}' --non-recursive exec:exec)
          echo "SPRING_BOOT_VERSION=$SPRING_BOOT_VERSION" >> $GITHUB_ENV

      - name: Build & push Docker image
        uses: mr-smithers-excellent/docker-build-push@v5
        with:
          image: dhaneshvl/git-docker-test
          tags: ${{ env.SPRING_BOOT_VERSION }}
          registry: docker.io
          dockerfile: Dockerfile
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
          push: true  # Set to true to push the Docker image
          pull: false  # Set to false to skip pulling the base image
          reuse: true  # Set to true to fail the build if the image already exists

  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Configure SSH
        run: |
          mkdir -p ~/.ssh
          echo -e "$SSH_PRIVATE_KEY" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          echo -e "StrictHostKeyChecking no\n" > ~/.ssh/config
          ssh-keyscan -t rsa 54.175.39.55 >> ~/.ssh/known_hosts
          cat ~/.ssh/known_hosts  # For debugging, check the contents of known_hosts
          ssh -i ~/.ssh/id_rsa -o StrictHostKeyChecking=no -T ec2-user@54.175.39.55

      - name: Remove the existing Docker image on AWS EC2
        run: |
          ssh -i ~/.ssh/id_rsa ec2-user@<EC2_INSTANCE_PUBLIC_IP> "docker rmi dhaneshvl/git-docker-test:${{ env.SPRING_BOOT_VERSION }} || true"

      - name: Pull the image from Docker Hub
        run: |
          ssh -i ~/.ssh/id_rsa ec2-user@<EC2_INSTANCE_PUBLIC_IP> "docker pull dhaneshvl/git-docker-test:${{ env.SPRING_BOOT_VERSION }}"

      - name: Run Docker image on AWS EC2
        run: |
          ssh -i ~/.ssh/id_rsa ec2-user@<EC2_INSTANCE_PUBLIC_IP> "docker run -d -p 8080:8080 dhaneshvl/git-docker-test:${{ env.SPRING_BOOT_VERSION }}"